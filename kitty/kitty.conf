# vim:fileencoding=utf-8:ft=conf:foldmethod=marker

#: THEMES
include                     ./themes/dark/hahaha-dark.conf
dynamic_background_opacity  yes
background_opacity          0.90
background_blur             0

#: Fonts {{{

font_family                 JetBrainsMono Nerd Font
font_size                   10
adjust_line_height          0
disable_ligatures           cursor

map ctrl+shift+= change_font_size all +0.5
map ctrl+shift+- change_font_size all -0.5
map ctrl+shift+backspace change_font_size all 0

#: }}}

#: Cursor customization {{{

cursor_shape                    block
shell_integration               no-cursor
# The interval to blink the cursor (in seconds).
# Set to zero to disable blinking.
# Negative values mean use system default.
# Note that the minimum interval will be limited to `repaint_delay`.
cursor_blink_interval           0.6
cursor_stop_blinking_after      20.0
# Hide mouse cursor after the specified number of seconds of the mouse
# not being used. Set to zero to disable mouse cursor hiding.
# Set to a negative value to hide the mouse cursor immediately when typing text
#TODO: doesn't work on wayland
mouse_hide_wait                 -3.0

#: }}}

#: Mouse {{{

url_style             curly
#open_url_modifiers    kitty_mod

#: }}}

#: Terminal Bell {{{

enable_audio_bell     no
bell_on_tab           no

#: }}}

#: Window Layout {{{

remember_window_size              yes
initial_window_width              640
initial_window_height             400
enabled_layouts                   *
window_border_width               1
window_margin_width               0
window_padding_width              0
placement_strategy                center

#: }}}

#: Tab Bar {{{

tab_bar_edge                      bottom
tab_bar_style                     powerline
tab_bar_min_tabs                  2
tab_switch_strategy               previous
tab_bar_margin_width              2
tab_separator                     " â”‡"
tab_title_template                {index} ðŸ”¥ {title}
active_tab_font_style             bold
inactive_tab_font_style           normal

#: }}}

#: Keyboard Shortcuts {{{

#: You can combine multiple actions to be triggered by a single
#: shortcut, using the syntax below::

#:     map key combine <separator> action1 <separator> action2 <separator> action3 ...

#: For example::

#:     map kitty_mod+e combine : new_window : next_layout

#: this will create a new window and switch to the next available
#: layout

#: You can use multi-key shortcuts using the syntax shown below::

#:     map key1>key2>key3 action

#: For example::

#:     map ctrl+f>2 set_font_size 20

clear_all_shortcuts           no
kitty_mod                     ctrl+shift

#: }}}

#: Clipboard {{{

map kitty_mod+c               copy_to_clipboard
map kitty_mod+v               paste_from_clipboard
# map kitty_mod+o               paste_selection_to_program

#: }}}

#: Scrolling {{{

# map kitty_mod+k               scroll_line_up
# map kitty_mod+j               scroll_line_down
# map kitty_mod+h               show_scrollback
# map kitty_mod+page_up         scroll_page_up
# map kitty_mod+page_down       scroll_page_down
# map kitty_mod+home            scroll_home
# map kitty_mod+end             scroll_end
#
#: }}}

#: Window Management {{{

map kitty_mod+enter           new_window_with_cwd
map kitty_mod+n               new_os_window_with_cwd

#: Works like new_window above, except that it opens a top level OS
#: kitty window. In particular you can use new_os_window_with_cwd to
#: open a window with the current working directory.

# map kitty_mod+w               close_window
map kitty_mod+[               previous_window
map kitty_mod+]               next_window
map kitty_mod+.               move_window_forward
map kitty_mod+,               move_window_backward
# map kitty_mod+`               move_window_to_top
map kitty_mod+r               start_resizing_window
map kitty_mod+1               first_window
map kitty_mod+2               second_window
map kitty_mod+3               third_window
map kitty_mod+4               fourth_window
map kitty_mod+5               fifth_window

#: }}}

#: Tab Management {{{

map kitty_mod+'               next_tab
map kitty_mod+;               previous_tab
map kitty_mod+t               new_tab_with_cwd
# map kitty_mod+q               close_tab
map kitty_mod+alt+t           set_tab_title

#: }}}

#: Layout Management {{{

map kitty_mod+l               next_layout
# map ctrl+alt+s                goto_layout stack
# map ctrl+alt+p                last_used_layout

#: }}}

#: Miscellaneous {{{

# map kitty_mod+f11             toggle_fullscreen
# map kitty_mod+f10             toggle_maximized
# map kitty_mod+u               kitten unicode_input
map kitty_mod+f2              edit_config_file
# map kitty_mod+escape          kitty_shell window

#: Open the kitty shell in a new window/tab/overlay/os_window to
#: control kitty using commands.

map kitty_mod+f11             set_background_opacity -0.01
map kitty_mod+f12             set_background_opacity +0.01
map kitty_mod+f10             set_background_opacity 1
map kitty_mod+f9              set_background_opacity default

#: You can create shortcurs to clear/reset the terminal. For example::

#:    # Reset the terminal
#     map kitty_mod+f9 clear_terminal reset active
#     # Clear the terminal screen by erasing all contents
#     map kitty_mod+f11 clear_terminal clear active
#     # Clear the terminal scrollback by erasing it
#     map kitty_mod+f11 clear_terminal scrollback active
#     #Scrolle the contetnts of the screen into the scrollback
#     map kitty_mod+f12 clear_terminal scroll active

#: Reload kitty.conf
map kitty_mod+f5              load_config_file

#: Debug config
map kitty_mod+f6              debug_config

#: }}}

#: Performance tweak {{{

#: Delay between screen updates (in milliseconds).
#: Decreasing it, increases frames-per-second (FPS) at the cost of more CPU usage.
#: The default value yields ~100 FPS which is more than sufficient for most uses.
#: Note that to actually achieve 100 FPS, you have to either set sync_to_monitor to no or use a monitor with a high refresh rate.
#: Also, to minimize latency when there is pending input to be processed, this option is ignored.
# repaint_delay 10

#: Delay before input from the program running in the terminal is processed (in milliseconds).
#: Note that decreasing it will increase responsiveness,
#: but also increase CPU usage and might cause flicker in full screen programs
#: that redraw the entire screen on each loop, because kitty is so fast that partial screen 
#: updates will be drawn. This setting is ignored when the input buffer is almost full
# input_delay 3

#: Sync screen updates to the refresh rate of the monitor
#: This prevents screen tearing when scrolling.
#: However, it limits the rendering speed to the refresh rate of your monitor.
#: With a very high speed mouse/high keyboard repeat rate,
#: you may notice some slight input latency. If so, set this to no.
sync_to_monitor             no

#: }}}
